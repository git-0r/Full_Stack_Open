{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Desktop/Full_Stack_Open/part-3/phonebook/phonebook-frontend/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"./Button\";\nimport React, { useState } from \"react\";\nimport personService from \"../services/persons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  persons,\n  setPersons,\n  setMessage,\n  setErrorMessage\n}) => {\n  _s();\n\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    persons.forEach(person => {\n      if (person.name.toLowerCase() === newName.toLowerCase() && person.number === newNumber) {\n        alert(`${newName} is already added to phonebook`);\n      } else if (person.name.toLowerCase() === newName.toLowerCase() && person.number !== newNumber) {\n        const updateChoice = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n\n        if (updateChoice) {\n          const id = person.id;\n          personService.update(person.id, {\n            number: newNumber\n          }).then(response => {\n            setPersons(persons.map(person => person.id !== id ? person : response.data));\n            setMessage('Number Updated');\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n          }).catch(error => {\n            console.log(error.response.data.error.message);\n\n            if (error.response.data.error.name === \"ValidationError\") {\n              setErrorMessage(`${error.response.data.error.message}`);\n            } else {\n              setErrorMessage(`Information of ${person.name} has already been removed from server`);\n            }\n          });\n        }\n      }\n    });\n    const namesArray = [];\n    persons.forEach(person => namesArray.push(person.name.toLowerCase()));\n\n    if (!namesArray.includes(newName.toLowerCase())) {\n      personService.create({\n        name: newName,\n        number: newNumber\n      }).then(response => {\n        setPersons([...persons].concat(response.data));\n        setMessage('Number Added');\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      }).catch(error => {\n        // console.log(error.response.data.error.message)\n        const err = error.response.data.error.message;\n        setErrorMessage(err);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: e => setNewName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setNewNumber(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        text: \"add\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"hX6U5bNNuNU4id/SHXfc8tOdMvo=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/rohit/Desktop/Full_Stack_Open/part-3/phonebook/phonebook-frontend/src/components/Form.js"],"names":["Button","React","useState","personService","Form","persons","setPersons","setMessage","setErrorMessage","newName","setNewName","newNumber","setNewNumber","onFormSubmit","e","preventDefault","forEach","person","name","toLowerCase","number","alert","updateChoice","window","confirm","id","update","then","response","map","data","setTimeout","catch","error","console","log","message","namesArray","push","includes","create","concat","err","target","value"],"mappings":"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","sourcesContent":["import Button from \"./Button\"\nimport React, { useState } from \"react\";\nimport personService from \"../services/persons\"\n\nconst Form = ({ persons, setPersons, setMessage, setErrorMessage }) => {\n\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n\n        persons.forEach(person => {\n\n            if (person.name.toLowerCase() === newName.toLowerCase() && person.number === newNumber) {\n                alert(`${newName} is already added to phonebook`)\n            }\n            else if (person.name.toLowerCase() === newName.toLowerCase() && person.number !== newNumber) {\n\n                const updateChoice = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n\n                if (updateChoice) {\n                    const id = person.id\n\n                    personService\n                        .update(person.id, { number: newNumber })\n                        .then(response => {\n                            setPersons(persons.map(person => person.id !== id ? person : response.data))\n\n                            setMessage('Number Updated')\n                            setTimeout(() => {\n                                setMessage(null)\n                            }, 5000)\n                        })\n                        .catch(error => {\n                            console.log(error.response.data.error.message)\n                            if (error.response.data.error.name === \"ValidationError\") {\n                                setErrorMessage(`${error.response.data.error.message}`)\n                            } else {\n                                setErrorMessage(\n                                    `Information of ${person.name} has already been removed from server`\n                                )\n                            }\n                        })\n                }\n            }\n        })\n\n        const namesArray = []\n        persons.forEach(person => namesArray.push(person.name.toLowerCase()))\n\n        if (!namesArray.includes(newName.toLowerCase())) {\n            personService\n                .create({ name: newName, number: newNumber })\n                .then(response => {\n                    setPersons([...persons].concat(response.data))\n                    setMessage('Number Added')\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    // console.log(error.response.data.error.message)\n                    const err = error.response.data.error.message\n                    setErrorMessage(err)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    return (\n        <form onSubmit={onFormSubmit}>\n            <div>\n                name: <input value={newName} onChange={(e) => setNewName(e.target.value)} required />\n            </div>\n            <div>\n                number: <input type=\"number\" onChange={(e) => setNewNumber(e.target.value)} required />\n            </div>\n            <div>\n                <Button text=\"add\" type=\"submit\" />\n            </div>\n        </form>\n    )\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}